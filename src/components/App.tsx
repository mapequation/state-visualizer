import { useState } from "react";
import { parseClu } from "@mapequation/infomap/parser";
import { FormControl, FormLabel, Switch } from "@chakra-ui/react";
import type { CluStateNode } from "@mapequation/infomap/filetypes";
import Network from "./Network";
import parseStates from "../lib/parse-states";
import mergeStatesClu from "../lib/merge-states-clu";
import lumpStateNodes from "../lib/lump-states";

function App() {
  const [useLumping, setUseLumping] = useState(true);
  const states = parseStates(net.split("\n").filter(Boolean));
  const clusters = parseClu<CluStateNode>(clu);
  let network = mergeStatesClu(states, clusters);

  if (useLumping) network = lumpStateNodes(network);

  return (
    <>
      <FormControl display="flex" alignItems="center">
        <FormLabel htmlFor="lumping" mb="0">
          Use lumping
        </FormLabel>
        <Switch
          id="lumping"
          isChecked={useLumping}
          onChange={(event) => setUseLumping(event.target.checked)}
        />
      </FormControl>
      <Network network={network} />
    </>
  );
}

const net = `# v2.2.0
# ./Infomap  --silent --two-level --directed --num-trials 100
*Vertices
0 ""
1 ""
2 ""
3 ""
4 ""
5 ""
6 ""
7 ""
8 ""
9 ""
10 ""
11 ""
12 ""
13 ""
14 ""
15 ""
16 ""
17 ""
18 ""
19 ""
20 ""
21 ""
22 ""
23 ""
24 ""
25 ""
26 ""
*States
# stateId physicalId
1 1
2 2
1024 0
1026 2
1027 3
2048 0
2049 1
2054 6
3073 1
3076 4
3077 5
4099 3
4101 5
4105 9
5123 3
5124 4
5127 7
6146 2
6151 7
6152 8
7173 5
7174 6
7176 8
8198 6
8199 7
8210 18
9220 4
9226 10
9227 11
10249 9
10251 11
10252 12
11273 9
11274 10
11279 15
12298 10
12301 13
12302 14
13324 12
13326 14
14348 12
14349 13
14352 16
15371 11
15376 16
15377 17
16398 14
16399 15
16401 17
17423 15
17424 16
17430 22
18440 8
18451 19
18452 20
19474 18
19476 20
19477 21
20498 18
20499 19
20504 24
21523 19
21526 22
21527 23
22545 17
22549 21
22551 23
23573 21
23574 22
23577 25
24596 20
24601 25
24602 26
25623 23
25624 24
25626 26
26648 24
26649 25
*Links
1 1024 5
1 1026 1
1 1027 1
2 2048 5
2 2049 1
2 2054 1
1024 1 5
1024 2 1
1026 2048 1
1026 2049 5
1026 2054 1
1027 3073 5
1027 3076 1
1027 3077 1
2048 1 1
2048 2 5
2049 1024 1
2049 1026 5
2049 1027 1
2054 6146 5
2054 6151 1
2054 6152 1
3073 1024 1
3073 1026 1
3073 1027 5
3076 4099 5
3076 4101 1
3076 4105 1
3077 5123 5
3077 5124 1
3077 5127 1
4099 3073 1
4099 3076 5
4099 3077 1
4101 5123 1
4101 5124 5
4101 5127 1
4105 9220 5
4105 9226 1
4105 9227 1
5123 3073 1
5123 3076 1
5123 3077 5
5124 4099 1
5124 4101 5
5124 4105 1
5127 7173 5
5127 7174 1
5127 7176 1
6146 2048 1
6146 2049 1
6146 2054 5
6151 7173 1
6151 7174 5
6151 7176 1
6152 8198 5
6152 8199 1
6152 8210 1
7173 5123 1
7173 5124 1
7173 5127 5
7174 6146 1
7174 6151 5
7174 6152 1
7176 8198 1
7176 8199 5
7176 8210 1
8198 6146 1
8198 6151 1
8198 6152 5
8199 7173 1
8199 7174 1
8199 7176 5
8210 18440 5
8210 18451 1
8210 18452 1
9220 4099 1
9220 4101 1
9220 4105 5
9226 10249 5
9226 10251 1
9226 10252 1
9227 11273 5
9227 11274 1
9227 11279 1
10249 9220 1
10249 9226 5
10249 9227 1
10251 11273 1
10251 11274 5
10251 11279 1
10252 12298 5
10252 12301 1
10252 12302 1
11273 9220 1
11273 9226 1
11273 9227 5
11274 10249 1
11274 10251 5
11274 10252 1
11279 15371 5
11279 15376 1
11279 15377 1
12298 10249 1
12298 10251 1
12298 10252 5
12301 13324 5
12301 13326 1
12302 14348 5
12302 14349 1
12302 14352 1
13324 12298 1
13324 12301 5
13324 12302 1
13326 14348 1
13326 14349 5
13326 14352 1
14348 12298 1
14348 12301 1
14348 12302 5
14349 13324 1
14349 13326 5
14352 16398 5
14352 16399 1
14352 16401 1
15371 11273 1
15371 11274 1
15371 11279 5
15376 16398 1
15376 16399 5
15376 16401 1
15377 17423 5
15377 17424 1
15377 17430 1
16398 14348 1
16398 14349 1
16398 14352 5
16399 15371 1
16399 15376 5
16399 15377 1
16401 17423 1
16401 17424 5
16401 17430 1
17423 15371 1
17423 15376 1
17423 15377 5
17424 16398 1
17424 16399 1
17424 16401 5
17430 22545 5
17430 22549 1
17430 22551 1
18440 8198 1
18440 8199 1
18440 8210 5
18451 19474 5
18451 19476 1
18451 19477 1
18452 20498 5
18452 20499 1
18452 20504 1
19474 18440 1
19474 18451 5
19474 18452 1
19476 20498 1
19476 20499 5
19476 20504 1
19477 21523 5
19477 21526 1
19477 21527 1
20498 18440 1
20498 18451 1
20498 18452 5
20499 19474 1
20499 19476 5
20499 19477 1
20504 24596 5
20504 24601 1
20504 24602 1
21523 19474 1
21523 19476 1
21523 19477 5
21526 22545 1
21526 22549 5
21526 22551 1
21527 23573 5
21527 23574 1
21527 23577 1
22545 17423 1
22545 17424 1
22545 17430 5
22549 21523 1
22549 21526 5
22549 21527 1
22551 23573 1
22551 23574 5
22551 23577 1
23573 21523 1
23573 21526 1
23573 21527 5
23574 22545 1
23574 22549 1
23574 22551 5
23577 25623 5
23577 25624 1
23577 25626 1
24596 20498 1
24596 20499 1
24596 20504 5
24601 25623 1
24601 25624 5
24601 25626 1
24602 26648 5
24602 26649 1
25623 23573 1
25623 23574 1
25623 23577 5
25624 24596 1
25624 24601 5
25624 24602 1
25626 26648 1
25626 26649 5
26648 24596 1
26648 24601 1
26648 24602 5
26649 25623 1
26649 25624 1
26649 25626 5
`;

const clu = `# v2.2.0
# ./Infomap  --silent --two-level --directed --num-trials 100
# started at 2022-03-29 16:15:57
# completed in 0.182778 s
# partitioned into 2 levels with 9 top modules
# codelength 2.72396 bits
# relative codelength savings 42.5847%
# flow model directed
# higher order
# state level
# module level 1
# state_id module flow node_id
3073 1 0.0128471 1
6146 1 0.0128471 2
1027 1 0.0127851 3
2054 1 0.0127851 6
1026 1 0.0127265 2
2049 1 0.0127265 1
1024 1 0.0125261 0
2048 1 0.0125261 0
2 1 0.0123138 2
1 1 0.0123138 1
23577 2 0.0128471 25
20504 2 0.0128471 24
25623 2 0.0127851 23
24596 2 0.0127851 20
24601 2 0.0127265 25
25624 2 0.0127265 24
24602 2 0.0125261 26
25626 2 0.0125261 26
26648 2 0.0123138 24
26649 2 0.0123138 25
10252 3 0.0128471 12
16398 3 0.0128471 14
14352 3 0.0127851 16
12298 3 0.0127851 10
12302 3 0.0127265 14
14348 3 0.0127265 12
12301 3 0.0125261 13
14349 3 0.0125261 13
13326 3 0.0123138 14
13324 3 0.0123138 12
22545 4 0.0129428 17
21526 4 0.0129428 22
22549 4 0.0129428 21
17430 4 0.0129428 22
21527 4 0.0129307 23
22551 4 0.0129307 23
23573 4 0.0129178 21
23574 4 0.0129178 22
11279 5 0.0129428 15
15371 5 0.0129428 11
15377 5 0.0129428 17
17423 5 0.0129428 15
15376 5 0.0129307 16
17424 5 0.0129307 16
16401 5 0.0129178 17
16399 5 0.0129178 15
4101 6 0.0129428 5
5124 6 0.0129428 4
5127 6 0.0129428 7
7173 6 0.0129428 5
5123 6 0.0129307 3
4099 6 0.0129307 3
3077 6 0.0129178 5
3076 6 0.0129178 4
4105 7 0.0129428 9
9220 7 0.0129428 4
9227 7 0.0129428 11
11273 7 0.0129428 9
9226 7 0.0129307 10
11274 7 0.0129307 10
10249 7 0.0129178 9
10251 7 0.0129178 11
18440 8 0.0129428 8
7176 8 0.0129428 8
8199 8 0.0129428 7
8210 8 0.0129428 18
7174 8 0.0129307 6
8198 8 0.0129307 6
6151 8 0.0129178 7
6152 8 0.0129178 8
18451 9 0.0129428 19
19477 9 0.0129428 21
21523 9 0.0129428 19
19474 9 0.0129428 18
18452 9 0.0129307 20
19476 9 0.0129307 20
20498 9 0.0129178 18
20499 9 0.0129178 19
`;

export default App;
